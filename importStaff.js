require("dotenv").config();
const mongoose = require("mongoose");
const XLSX = require("xlsx");
const connectDB = require("./config/db");
const Staff = require("./models/staffModel");

async function importExcel() {
  try {
    await connectDB();

    // ƒê·ªçc file Excel
    const workbook = XLSX.readFile("./test.xlsx");
    const sheet = workbook.Sheets[workbook.SheetNames[0]];
    const rows = XLSX.utils.sheet_to_json(sheet);

    console.log(`üì• ƒê·ªçc ƒë∆∞·ª£c ${rows.length} d√≤ng t·ª´ Excel`);

    // Chuy·ªÉn d·ªØ li·ªáu t·ª´ Excel sang object ƒë·ªÉ l∆∞u v√†o MongoDB
    const staffDocs = rows
      .filter((r) => r["M√£ Nh√¢n Vi√™n"]) // b·ªè d√≤ng tr·ªëng
      .map((r) => ({
        maNhanVien: r["M√£ Nh√¢n Vi√™n"].toString().trim(),
        ho: r["H·ªç"]?.trim() || "",
        email: r["Email"]?.trim() || "",
        phanLoaiCongTy: r["Ph√¢n lo·∫°i c√¥ng ty"]?.trim() || "",
        congTy: r["C√¥ng ty"]?.trim() || "",
        donVi: r["ƒê∆°n v·ªã"]?.trim() || "",
        phongBan: r["Ph√≤ng ban"]?.trim() || "",
        toNhom: r["T·ªï nh√≥m"]?.trim() || "",
        capBoSung1: r["C·∫•p b·ªï sung 1"]?.trim() || "",
        capBoSung2: r["C·∫•p b·ªï sung 2"]?.trim() || "",
        hlevel1Name: r["HLevel1 Name"]?.trim() || "",
        emailCapPheDuyet: r["Email c·∫•p ph√™ duy·ªát"]?.trim() || "",
        caLamViecGanNhat: r["Ca l√† vi·ªác g·∫ßn nh·∫•t - 19/09/2025"]
          ? r["Ca l√† vi·ªác g·∫ßn nh·∫•t - 19/09/2025"].toString().trim()
          : "",
      }));

    // üóëÔ∏è X√≥a to√†n b·ªô d·ªØ li·ªáu c≈© trong collection
    const deleted = await Staff.deleteMany({});
    console.log(`üóëÔ∏è ƒê√£ x√≥a ${deleted.deletedCount} b·∫£n ghi c≈© trong MongoDB`);

    // üì• Th√™m m·ªõi to√†n b·ªô d·ªØ li·ªáu
    const inserted = await Staff.insertMany(staffDocs);
    console.log(`‚úÖ ƒê√£ import th√†nh c√¥ng ${inserted.length} b·∫£n ghi m·ªõi`);
  } catch (error) {
    console.error("‚ùå L·ªói import:", error.message);
  } finally {
    await mongoose.connection.close();
  }
}

importExcel();
